#!/bin/bash

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    --name)
    NAME="$2"
    shift # past argument
    shift # past value
    ;;
    --params)
    PARAMS="$2"
    shift # past argument
    shift # past value
    ;;
    --gcp_project)
    GCP_PROJECT="$2"
    shift # past argument
    shift # past value
    ;;
    --docker_registry)
    DOCKER_REGISTRY="$2"
    shift # past argument
    shift # past value
    ;;
    --docker_repository)
    DOCKER_REPOSITORY="$2"
    shift # past argument
    shift # past value
    ;;
    --docker_tag)
    DOCKER_TAG="$2"
    shift # past argument
    shift # past value
    ;;
    *)    # unknown option
    #POSITIONAL+=("$1") # save it in an array for later
    #shift # past argument
    echo "Unknown option(s) $1 $2"
    return -3
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

echo "DOCKER_REGISTRY       = ${DOCKER_REGISTRY}"
echo "DOCKER_REPOSITORY     = ${DOCKER_REPOSITORY}"
echo "DOCKER_TAG            = ${DOCKER_TAG}"
echo "GOOGLE_AUTH           = ${GOOGLE_AUTH}"
echo "GCP_PROJECT           = ${GCP_PROJECT}"
echo "PARAMS                = ${PARAMS}"
echo "NAME                  = ${NAME}"

if [[ -z "${DOCKER_REGISTRY}" ]]; then
  echo "DOCKER_REGISTRY is a mandatory argument"
  return -1
fi
if [[ -z "${DOCKER_REPOSITORY}" ]]; then
  echo "DOCKER_REPOSITORY is a mandatory argument"
  return -1
fi
if [[ -z "${PARAMS}" ]]; then
  echo "PARAMS is a mandatory argument"
  return -1
fi
if [[ -z "${NAME}" ]]; then
  echo "NAME is a mandatory argument"
  return -1
fi
if [[ -z "${DOCKER_TAG}" ]]; then
  echo "DOCKER_TAG is a mandatory argument"
  return -1
fi
if [[ -z "${GOOGLE_AUTH}" ]]; then
  echo "GOOGLE_AUTH environmental variable must be set when using gcp"
  return 2
fi
if [[ -z "${GCP_PROJECT}" ]]; then
  echo "GCP_PROJECT argument must be set when using gcp"
  return 2
fi

#echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
#gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
gcloud --quiet config set project ${GCP_PROJECT}
sh -c "gcloud run deploy $NAME --image=${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}:${DOCKER_TAG} $PARAMS"
